<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\File;
use App\Http\Requests;
use App\Http\Helper;
use App\Models\Users;
use App\Models\ParkingspotImages;
use App\Models\ParkingSpot;
use App\Models\Pricing;
use App\Models\SurchargeAmount;
use Mail;
use DateTime;

use App\Models\DeviceMaster;
use Aws\Credentials\CredentialProvider;


class BraintreeController extends Controller
{

    public function checkout()
    {

        //$clientToken = Braintree_ClientToken::generate();
        $clientToken = \Braintree_ClientToken::generate();
        if (isset($clientToken) && !empty($clientToken)) {
            return $clientToken;
        } else {
            return '';
        }
    }

    public function checkout_post()
    {
        $userID = $_POST["userID"];
        $amount = $_POST["amount"];
        $nonceFromTheClient = $_POST["payment_method_nonce"];
        $result = \Braintree_Transaction::sale([
            'amount' => $amount,
            'paymentMethodNonce' => 'fake-valid-nonce',
            'options' => [
                'submitForSettlement' => True
            ]
        ]);

        if ($result->success || !is_null($result->transaction)) {
            $transaction = $result->transaction;
            $payment_history = DB::table('payment_history')->insertGetId(
                [
                    'users_id' => $userID,
                    'transaction_id' => $transaction->id,
                    'transaction_details' => $transaction,
                    'payment_type' => 'booking_amount',
                    'amount' => $amount,
                    'created_date' => Helper::get_curr_datetime(),
                    'status' => 'Complete'
                ]
            );
            return $transaction->id;
        } else {
            $errorString = "";
            foreach ($result->errors->deepAll() as $error) {
                $errorString .= 'Error: ' . $error->code . ": " . $error->message . "\n";
            }
            return $errorString;
        }

    }
}
